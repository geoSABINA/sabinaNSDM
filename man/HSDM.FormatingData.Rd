% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FormatingData.R
\name{HSDM.FormatingData}
\alias{HSDM.FormatingData}
\title{Prepare input data for the Hierarchical Species Distribution Modeling (HSDM) analysis.}
\usage{
HSDM.FormatingData(
  hsdm_input,
  nPoints = 10000,
  Min.Dist.Global = "resolution",
  Min.Dist.Regional = "resolution",
  save.output = TRUE
)
}
\arguments{
\item{hsdm_input}{An object of class "hsdm.input" generated using the \code{\link{HSDM.InputData}} function. #@@JMB ver como ponemos el hsbm.input class}

\item{nPoints}{(\emph{optional, default} \code{10000}) \cr
An \code{integer} corresponding to the number of background points used to generate background data if absence/pseudo-absences/background points is not provided at \code{\link{HSDM.InputData}}.}

\item{Min.Dist.Global}{(\emph{optional, default} \code{'resolution'}) \cr
A \code{numeric} corresponding to the minimum distance between background points at the global level. If \code{Min.Dist.Global="resolution"}, the minimum distance is calculated based on the resolution of the input raster}

\item{Min.Dist.Regional}{(\emph{optional, default} \code{'resolution'}) \cr
A \code{numeric} corresponding to the minimum distance between background points at the regional level. If \code{Min.Dist.Regional="resolution"}, the minimum distance is calculated based on the resolution of the input raster}

\item{save.output}{(\emph{optional, default} \code{TRUE}) \cr
A \code{logical} value defining whether the outputs should be saved at local.}
}
\value{
An object of class "hsdm.finput" containing formatted input data for the HSDM:
\itemize{
\item \code{Species.Name} The name of the species provided as input.
\item \code{args} A \code{list} containing the arguments used for data formatting, including: \code{nPoints}, \code{Min.Dist.Global} and \code{Min.Dist.Regional}.
\item \code{SpeciesData.XY.Global} Species presence data at the global level at \code{data.frame} format after applying spatial thinning.
\item \code{SpeciesData.XY.Regional} Species presence data at the regional level at \code{data.frame} format after applying spatial thinning.
\item \code{Background.XY.Global} Background points data at the global level at \code{data.frame} format after applying spatial thinning.
\item \code{Background.XY.Regional} Background points data at the regional level at \code{data.frame} format after applying spatial thinning.
\item \code{IndVar.Global} Independent variables at the global level in \code{\link[terra:rast]{PackedSpatRaster}} format.
\item \code{IndVar.Regional} Independent variables at the regional level in \code{\link[terra:rast]{PackedSpatRaster}} format.
\item \code{Scenarios} A \code{list} containing future scenarios in \code{\link[terra:rast]{PackedSpatRaster}} format.
\item \code{Summary} Summary of formated input data in \code{data.frame} format.
}
}
\description{
Format input data and background data for usage in \HSDM.
}
\details{
This function formates the input data for HSDM, including generating background points, cleaning and thinning presence and background data, and saving the results to local if specified. If \code{save.output=TRUE}, outputs (i.e., species occurrences and background points after appling spatial thinning, at both global and regional level, are stored out of R in the \emph{Results/} folder created in the current working directory:
\itemize{
\item the \emph{Results/Global/SpeciesXY/} folder, containing the ocurrences species xy of global level after appling spatial thinning, named with the \code{resp.name} argument.
\item the \emph{Results/Global/Background/} folder, containing the background points xy of global level after appling spatial thinning.
\item the \emph{Results/Regional/SpeciesXY/} folder, containing the ocurrences species xy of global level after appling spatial thinning, named with the \code{resp.name} argument.
\item the \emph{Results/Regional/Background/} folder, containing the background points xy of global level after appling spatial thinning.
}
}
\examples{
# Load the required packages  #@@JMB en el ejemplo hay que poner también el HSDM.InputData() para tener myInputData? Ver cómo hacen otros
library(terra)
library(ecospat)

# Format the input data
myFormatedData <- HSDM.FormatingData(myInputData,

}
